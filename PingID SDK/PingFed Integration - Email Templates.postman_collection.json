{
	"info": {
		"_postman_id": "cb6f5ac5-2150-4b16-8dd6-ee90ba37540a",
		"name": "PingFed Integration - Email Templates",
		"description": "These calls are used to support email OTPs in conjunction with the PingFed PingIDSDK Adapter.\n\nThere are 2 calls that are potentially passed from the PF Adapter to the PingID SDK application - one with a payload (i.e from a Mobile SDK enabled App) or without (i.e. a Web Browser). Both of these calls need an emailTemplate defined for the PingID SDK application so that the OTP can be sent if that is the desired method for the User.\n\nThe Pre-Request Script is needed to create the proper Authorization token.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "PingID SDK - Retrieve Email Templates",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "2a6f3782-8fb4-495e-89b2-523b2704445e",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "PINGID-HMAC={{authToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n\t\"fromAddress\": \"noreply@pingidentity.com\", \n\t\"emailSubject\": \"CPriceLab - Authentication Request\", \n\t\"emailBody\": \"New authentication request - OTP is ${OTP}\", \n\t\"replyToAddress\": \"noreply@pingidentity.com\", \n\t\"type\": \"authentication\"\n\t\n}"
				},
				"url": {
					"raw": "https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/applications/{{sdkAppId}}/emailconfigurations",
					"protocol": "https",
					"host": [
						"sdk",
						"pingid",
						"com"
					],
					"path": [
						"pingid",
						"v1",
						"accounts",
						"{{sdkAccountId}}",
						"applications",
						"{{sdkAppId}}",
						"emailconfigurations"
					]
				},
				"description": "Retrieves emailTemplate objects for an Application"
			},
			"response": []
		},
		{
			"name": "PingID SDK - Create Email Template for Browser AuthN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0ba39ca1-197a-4172-b874-a829d96a1f28",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "PINGID-HMAC={{authToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n\t\"fromAddress\": \"noreply@pingidentity.com\", \n\t\"emailSubject\": \"Your App - Authentication Request (Browser)\", \n\t\"emailBody\": \"New authentication request to Your Application from a Browser - Your One Time Passcode is <b>${OTP}</b>. <br><br>If this is unexpected, please Reset your Password\", \n\t\"replyToAddress\": \"noreply@pingidentity.com\", \n\t\"type\": \"auth_without_payload\"\n\t\n}"
				},
				"url": {
					"raw": "https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/applications/{{sdkAppId}}/emailconfigurations/",
					"protocol": "https",
					"host": [
						"sdk",
						"pingid",
						"com"
					],
					"path": [
						"pingid",
						"v1",
						"accounts",
						"{{sdkAccountId}}",
						"applications",
						"{{sdkAppId}}",
						"emailconfigurations",
						""
					]
				},
				"description": "Creates an emailTemplate"
			},
			"response": []
		},
		{
			"name": "PingID SDK - Create Email Template for Mobile App AuthN",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "0ba39ca1-197a-4172-b874-a829d96a1f28",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "PINGID-HMAC={{authToken}}"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{ \n\t\"fromAddress\": \"noreply@pingidentity.com\", \n\t\"emailSubject\": \"Your App - Authentication Request (Mobile Device)\", \n\t\"emailBody\": \"New authentication request to Your Application from a Mobile Device - Your One Time Passcode is <b>${OTP}</b>. <br><br>If this is unexpected, please Reset your Password\", \n\t\"replyToAddress\": \"noreply@pingidentity.com\", \n\t\"type\": \"auth_with_payload\"\n\t\n}"
				},
				"url": {
					"raw": "https://sdk.pingid.com/pingid/v1/accounts/{{sdkAccountId}}/applications/{{sdkAppId}}/emailconfigurations/",
					"protocol": "https",
					"host": [
						"sdk",
						"pingid",
						"com"
					],
					"path": [
						"pingid",
						"v1",
						"accounts",
						"{{sdkAccountId}}",
						"applications",
						"{{sdkAppId}}",
						"emailconfigurations",
						""
					]
				},
				"description": "Creates an emailTemplate"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0ea533b9-2d86-4571-b064-88cd2f8ec7a7",
				"type": "text/javascript",
				"exec": [
					"// This script can be used to create the proper Authorization token needed for any call made to the PingID SDK service.",
					"",
					"// The tenant secrets - sdkApiKey && sdkApiToken - should be defined in the Collection Environment.",
					"// Due to the way that Postman handles variable resolution, the absolute values for the URL are necessary - ",
					"// otherwise the data pulled into this script will not match the actual call and the request will fail. ",
					"",
					"var removeIllegalCharacters = function(input) {",
					"    return input",
					"        .replace(/=/g, '')",
					"        .replace(/\\+/g, '-')",
					"        .replace(/\\//g, '_');",
					"};",
					"",
					"// Base64 Encoding function",
					"var base64object = function(input) {",
					"    var inputWords = CryptoJS.enc.Utf8.parse(JSON.stringify(input));",
					"    var base64 = CryptoJS.enc.Base64.stringify(inputWords);",
					"    var output = removeIllegalCharacters(base64);",
					"    return output;",
					"};",
					"",
					"// Get the AccountID out of the Request URL",
					"var sdkAccountId = pm.request.url.path[3];",
					"",
					"// Get the Tenant Secrets from the environment (the values are in the pingidsdk.properties file)",
					"var sdkApiToken = pm.environment.get(\"sdkApiToken\");",
					"var sdkApiKey = pm.environment.get(\"sdkApiKey\");",
					"",
					"//Parse the Request",
					"var method = pm.request.method;",
					"var payload = pm.request.body.raw;",
					"var path = pm.request.url.path.toString().replace(/,/g, \"/\");",
					"",
					"//Grab any parameters",
					"var parameters = pm.request.url.query.toString();",
					"",
					"// Hash and Hex Encode Request Payload",
					"var payloadHash = CryptoJS.SHA256(payload);",
					"var payloadHex = CryptoJS.enc.Hex.stringify(payloadHash);",
					"",
					"// Build the proper canonicalString",
					"if (parameters === \"\") {",
					"    var canonicalString = method + \":\" + \"sdk.pingid.com\" + \":\" + \"/\" + path + \":\" + payloadHex + \":\";",
					"}",
					"else",
					"{",
					"    var canonicalString = method + \":\" + \"sdk.pingid.com\" + \":\" + \"/\" + path + \":\" + parameters + \":\" + payloadHex + \":\";",
					"}",
					"",
					"// Hash the Canonical String",
					"var stringHash = CryptoJS.SHA256(canonicalString);",
					"var stringHex = CryptoJS.enc.Hex.stringify(stringHash);",
					"",
					"// Construct JWT Header",
					"var jwtHeader = { 'alg': 'HS256', 'typ': 'JWT', 'account_id': sdkAccountId, 'token': sdkApiToken, 'jwt_version': 'v4' };",
					"",
					"// Construct JWT Payload",
					"var jwtPayload = { 'data': stringHex };",
					"",
					"// Create JWT",
					"var unsignedToken = base64object(jwtHeader) + \".\" + base64object(jwtPayload);",
					"",
					"// Sign the JWT",
					"var sdkApiKeyBytes = CryptoJS.enc.Base64.parse(sdkApiKey);",
					"var signatureHash = CryptoJS.HmacSHA256(unsignedToken, sdkApiKeyBytes);",
					"var signature = CryptoJS.enc.Base64.stringify(signatureHash);",
					"var signature2 = removeIllegalCharacters(signature);",
					"",
					"var token = unsignedToken + '.' + signature2;",
					"",
					"// Set the token in the environment to be included in an Authorization: PINGID-HMAC={{authToken}} header for the request",
					"pm.environment.set(\"authToken\", token);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "ded2597c-ea87-4bf4-b3a3-e0a339a23639",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}